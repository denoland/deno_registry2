name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Setup Deno environment
        uses: denolib/setup-deno@v2.2.0
        with:
          deno-version: v1.3.2

      - uses: actions/checkout@v2

      - name: Format
        run: |
          deno fmt --check
          cd terraform && terraform fmt -check -recursive

      - name: Lint
        run: deno lint --unstable

      - name: Test
        run: docker-compose up --build --abort-on-container-exit

      - name: Download dependencies
        run: make download

      - name: Package lambdas
        run: make package

      - name: Validate
        run: |
          terraform init -backend=false
          terraform validate
        working-directory: terraform

      - name: Create terraform plan (prod)
        if: github.ref == 'refs/heads/main'
        run: |
          terraform init -backend-config bucket=$TERRAFORM_STATE_BUCKET
          terraform plan \
            -var env=prod \
            -var mongodb_uri=$MONGODB_URI \
            -var domain=$DOMAIN \
            -var certificate_arn=$CERTIFICATE_ARN \
            -out plan.tfplan
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          DOMAIN: api.deno.land
          CERTIFICATE_ARN: arn:aws:acm:us-east-1:035475582903:certificate/1c3bd085-95ef-4c27-ae09-18d27825739c
          TERRAFORM_STATE_BUCKET: deno-registry2-prod-terraform-state-b3a31d16
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: terraform

      - name: Deploy infrastructure (prod)
        if: github.ref == 'refs/heads/main'
        run: terraform apply plan.tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: terraform

      - name: Deploy CF Worker (prod)
        if: github.ref == 'refs/heads/main'
        uses: cloudflare/wrangler-action@1.2.0
        with:
          environment: "production"
          apiToken: ${{ secrets.cloudflareToken }}
          workingDirectory: worker

      - name: Run Smoke Tests (prod)
        run: sleep 30 && deno run --allow-net tools/smoke_test.js
        if: github.ref == 'refs/heads/main'
