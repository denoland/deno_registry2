AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: deno_registry2

Resources:
  Deno:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:390065572566:applications/deno
        SemanticVersion: 1.2.2

  DenoHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - "*"
      Domain:
        DomainName: api.deno.land
        CertificateArn: arn:aws:acm:us-east-1:035475582903:certificate/661923eb-63f3-40ef-88c8-2753824734cd

  WebhookGithubFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: auto
      CodeUri: .
      MemorySize: 128
      Handler: bundle.handler
      Runtime: provided
      Layers:
        - !GetAtt Deno.Outputs.LayerArn
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref StorageBucket
        - SQSSendMessagePolicy:
            QueueName: !GetAtt BuildQueue.QueueName
      Environment:
        Variables:
          DENO_UNSTABLE: 1
          HANDLER_EXT: js
          MONGO_URI: "{{resolve:secretsmanager:mongodb/atlas/deno_registry2:SecretString:MongoURI}}"
          STORAGE_BUCKET: !Ref StorageBucket
          BUILD_QUEUE: !Ref BuildQueue
      Timeout: 10
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref DenoHttpApi
            Path: /webhook/gh/{name}
            Method: POST
    Metadata:
      BuildMethod: makefile

  AsyncPublishFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: auto
      CodeUri: .
      MemorySize: 1024
      Handler: bundle.handler
      Runtime: provided
      Layers:
        - !GetAtt Deno.Outputs.LayerArn
        - !Sub "arn:aws:lambda:${AWS::Region}:553035198032:layer:git-lambda2:6"
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref StorageBucket
      Environment:
        Variables:
          DENO_UNSTABLE: 1
          HANDLER_EXT: js
          MONGO_URI: "{{resolve:secretsmanager:mongodb/atlas/deno_registry2:SecretString:MongoURI}}"
          STORAGE_BUCKET: !Ref StorageBucket
          REMOTE_URL: https://deno.land/x/%m@%v
      Timeout: 300
      Events:
        BuildQueueTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt BuildQueue.Arn
            BatchSize: 1
    Metadata:
      BuildMethod: makefile

  ModulesListFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: auto
      CodeUri: .
      MemorySize: 128
      Handler: bundle.handler
      Runtime: provided
      Layers:
        - !GetAtt Deno.Outputs.LayerArn
      Environment:
        Variables:
          DENO_UNSTABLE: 1
          HANDLER_EXT: js
          MONGO_URI: "{{resolve:secretsmanager:mongodb/atlas/deno_registry2:SecretString:MongoURI}}"
      Timeout: 5
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref DenoHttpApi
            Path: /modules
            Method: GET
    Metadata:
      BuildMethod: makefile

  ModulesGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: auto
      CodeUri: .
      MemorySize: 128
      Handler: bundle.handler
      Runtime: provided
      Layers:
        - !GetAtt Deno.Outputs.LayerArn
      Environment:
        Variables:
          DENO_UNSTABLE: 1
          HANDLER_EXT: js
          MONGO_URI: "{{resolve:secretsmanager:mongodb/atlas/deno_registry2:SecretString:MongoURI}}"
      Timeout: 5
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref DenoHttpApi
            Path: /modules/{name}
            Method: GET
    Metadata:
      BuildMethod: makefile

  BuildsGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: auto
      CodeUri: .
      MemorySize: 128
      Handler: bundle.handler
      Runtime: provided
      Layers:
        - !GetAtt Deno.Outputs.LayerArn
      Environment:
        Variables:
          DENO_UNSTABLE: 1
          HANDLER_EXT: js
          MONGO_URI: "{{resolve:secretsmanager:mongodb/atlas/deno_registry2:SecretString:MongoURI}}"
      Timeout: 5
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref DenoHttpApi
            Path: /builds/{id}
            Method: GET
    Metadata:
      BuildMethod: makefile

  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedMethods: [GET]
            AllowedOrigins: ["*"]

  BuildQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout:
        Ref: SQSVisibilityTimeout
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "BuildDLQ"
            - "Arn"
        maxReceiveCount: 5

  BuildDLQ:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout:
        Ref: SQSVisibilityTimeout

Parameters:
  SQSVisibilityTimeout:
    Type: Number
    Default: 301

Outputs:
  ApiEndpoint:
    Value: !Sub "https://${DenoHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
  S3Bucket:
    Value: !Sub "${StorageBucket}.s3.${AWS::Region}.amazonaws.com"
